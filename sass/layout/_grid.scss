
.row {
  // max-width - if we have enough availble space, then it'll have the width specified. If not, ie, the viewport is smaller
  // than the max width specified, then it will simply fill 100% od the available space
  // width: 1140px;
  max-width: $grid-width; 
  // background-color: #eee;
  margin: 0 auto;  // center a block element inside another bloack element
  // margin-bottom: $gutter-vertical;

  // .row:not(:last-child) - selects everything except the last child
  &:not(:last-child) {
    margin-bottom: $gutter-vertical;
  }

  @include clearfix;

  // [alt="Logo"] {
  // }

  // class with attibute which "contains" with "col-"
  // [class*="col-"]

  // $ means the end. class with attibute ends with "col-"
  // [class$="col-"]

  // ^ means the start. class with attibute starts with "col-"
  [class^="col-"] {
    // background-color: orangered;
    float: left;  
    
    &:not(:last-child) {
      margin-right: $gutter-horizontal;
    }
  }

  .col-1-of-2 {
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }

  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }

  .col-2-of-3 {
    width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
  }

  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }

  .col-2-of-4 {
    width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
  }

  .col-3-of-4 {
    width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
  }

} 

// .grid-test div:last-child {
//   margin-bottom: 0;
// }

// .grid-test {
//   div:last-child {
//     margin-bottom: 0;
//   }
// }
